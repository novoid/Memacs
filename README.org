## This file is best viewed with GNU Emacs Org-mode: http://orgmode.org/

* Memacs
#+BEGIN_QUOTE
Visualize your life in [[http://orgmode.org/][Org mode]] 
#+END_QUOTE

What were you doing on February 14th of 2007? On which tasks were
you working on that very day you met your girl friend? When was the
last appointment with your dentist? Who called you on telephone
during that meeting with your customer last month? Most people can not 
answer such questions. With *Memacs* you can!

Memacs extracts metadata such as subjects, timestamps, contact information,
etc. from many different existing data sources (like filenames, emails,
photos, tweets, bookmarks, ...) on your computer and generates files which are
readable by [[http://en.wikipedia.org/wiki/Emacs][GNU Emacs]] with the help of 
[[http://orgmode.org/][Org-mode]].

#+BEGIN_HTML
<img src="tmp/example.png" alt="example">
#+END_HTML

Memacs - as the central component of the system - is a hub for all the
connectors that add data from individual data sources. Those connectors
are called *Memacs modules* or short /module/.

** Table of Contents
- [[#installation][Installation]]
- [[#getting-started][Getting started]]
- [[#memacs-modules][Memacs modules]]
- [[#example-story][Example story]]
- [[#background][Background]]
- [[#contribute][Contribute]]
- [[#license][License]]

** Installation

- clone or download repository from github
- make sure to use *python v2.7*
- create a virtualenv or
- export/set ~PYTHONPATH~ 

: PYTHONPATH=/path/to/memacs

- install dependencies

: pip install -r requirements.txt

** Getting started

Please make sure you also read the [[FAQs_and_Best_Practices.org][FAQ's and best practices]], as it contains many tips and tricks on how to meet your requirements and on how to choose a reasonable setup

- choose the modules you want to use and set them up one by one
- each [[#memacs-modules][module]] shares global options in common but also comes with its very own set of custom arguments
- read the files in the ~docs~ folder and start modules from the ~bin~ folder of Memacs
- start the module of your choice with the argument ~--help~, e.g. ~bin/memacs_csv --help~
- you probably want to *develop and test a module invocation* in the command line and 
- when it works, set up a periodical invocation (cronjob)

** Memacs modules

- [[docs/memacs_arbtt.org][arbtt]]
- [[docs/memacs_battery.org][battery]]
- [[docs/memacs_csv.org][csv]]
- *[[docs/memacs_filenametimestamps][filenametimestamps]]*
- [[docs/memacs_git.org][git]]
- [[docs/memacs_gpx.org][gpx]]
- [[docs/memacs_ical.org][ical]]
- [[docs/memacs_imap.org][imap]]
- [[docs/memacs_lastfm.org][lastfm]]
- [[docs/memacs_mu.org][mu]]
- [[docs/memacs_phonecalls.org][phonecalls]]
- [[docs/memacs_photos.org][photos]]
- [[docs/memacs_rss.org][rss]]
- [[docs/memacs_simplephonelogs.org][simplephonelogs]]
- [[docs/memacs_sms.org][sms]]
- [[docs/memacs_svn.org][svn]]
- [[docs/memacs_twitter.org][twitter]]
- [[docs/memacs_whatsapp.org][whatsapp]]

Those modules are *not* adopted to the new unified framework yet:

- [[tmp/maildir/memacs_maildir.org][maildir]]
- [[tmp/mbox/memacs_mbox.org][mbox]] (also useful for newsgroups)
  
Following modules exist as a rough idea only and might get implemented some day (by you?):

- [[tmp/tagstore/memacs_tagstore.org][tagstore]]
- [[tmp/jpilot/memacs_jpilot-todos.org][jpilot todos]]
- [[tmp/jpilot/memacs_jpilot-datebook.org][jpilot datebook]]
- [[tmp/calendars/memacs_googlecalendar.org][google calendar]]

** Example story

Imagine you're already using Memacs.

When remembering that day, when you joined an interesting talk about
«[[http://en.wikipedia.org/wiki/Getting_Things_Done][Getting Things Done]]» (GTD), you start up your GNU Emacs with your main
Org-mode file. There you go to the Agenda-view and select this
specific day a couple of months ago.

There it is, from 2pm to 3pm you scheduled this talk in your calendar.
And then you realize that within this time frame, there appear some
[[http://en.wikipedia.org/wiki/Jpeg][JPEG files]] containing an [[http://www.cl.cam.ac.uk/~mgk25/iso-time.html][ISO 8601]] time stamp[1] are indexed by one
module. (filenametimestamp-module)

This image contains a slide you found interesting and which you
photographed using your sleek smartphone. Who would remember having
taken a picture during a talk?

Ten minutes after the talk you wrote a short message on [[http://twitter.com][Twitter]] where
you mentioned useful URLs for your followers. This time those URLs are
handy for yourself too! (Twitter-module)

On the evening of that day you see an entry of an incoming email from
the author of the talk. Now you remember having had a cool
conversation at the end of the talk where he promised you some
additional information about that nice little GTD tool on his
computer. Great that you got that link to that email too. Without
Memacs you would probably never remembered that email again.
(Maildir-module)

And then there were some bookmarks you saved this day, almost all
related to great ideas you got from the GTD talk. (delicious-module)

This small story shows only a few use cases where different modules
combine given data sources and their information to provide an overall
view related to an event. Since Org-mode has got links, no actual data
has to be duplicated (except the meta data extracted by Memacs).
Emails, files, bookmarks, and so forth are linked rather than copied.

[1] with periods instead of colons - just because the [[http://msdn.microsoft.com/en-us/library/aa365247(v%3Dvs.85).aspx#naming_conventions][ancient
limitations of Microsoft based file systems]]; like «2011-02-14T14.35.42
ideas.jpg»

** Background

In 1945, [[http://en.wikipedia.org/wiki/Vannevar_Bush][Vannevar Bush]] wrote a famous article «[[http://en.wikipedia.org/wiki/As_We_May_Think][As We May Think]]» where
he develops the idea of having a «memory extender» called *Memex*. The
memex can store all letters, books, and other information which are
related to a person.

Besides having foreseen several technologies like hypertext, he
defined a device that holds all metadata and data and provides
associative trails to access information.

In the last decade of the previous century Microsoft Research had a
research program that resulted in [[http://en.wikipedia.org/wiki/MyLifeBits][MyLifeBits]]. This software tried to
store each information of the user like office documents, screenshots,
name of active windows on the desktop computer, and even automatically
took photographs ([[http://en.wikipedia.org/wiki/Sensecam][SenseCam]]). This word did not result in any (open)
software product. Bell and Gemmell wrote a book called «[[http://www.amazon.de/gp/product/0525951342/ref%3Das_li_ss_tl?ie%3DUTF8&tag%3Dkarlssuder-21&linkCode%3Das2&camp%3D1638&creative%3D19454&creativeASIN%3D0525951342][Total Recall]]».

The Memacs project tries to implement the ideas of Vannevar Bush's
vision with open source and open standards. Hence, it's name «Memacs»
is the obvious combination of «[[http://www.gnu.org/software/emacs/][GNU Emacs]]» and «Memex».

Memacs uses GNU Emacs Org-mode to visualize and access information
extracted by Memacs modules: using tags, time stamps, full text
search, and so forth GNU Emacs is able to derive different
views. The most important view probably is the [[http://orgmode.org/org.html#Agenda-Views][Agenda-view]] where you
can see anything that happened during a specific day/week/month
according to the time frame selected. But you can derive other views
too. For example you can choose to generate a condensed search result
using a [[http://en.wikipedia.org/wiki/Boolean_algebra_(logic)][boolean combination]] of tags.

Related to Memacs, the project founder developed a research software
called *[[http://tagstore.org][tagstore]]*. This system allows users to store (local) files
using tags without a hierarchy of folders. As a natural extension,
tagstore targets associative access for (local) files. You might want
to check out tagstore too. Memacs and tagstore are a very useful
combination.

If you do like to know how to efficiently organize digital files in a
simple and operating system independent way, read [[http://karl-voit.at/managing-digital-photographs/][this blog post]] from
Karl. It might give you ideas for your workflows as well.

Karl also wrote [[http://arxiv.org/abs/1304.1332][a whitepaper on Memacs]] which describes Memacs from a
scientists point of view.

** Contribute

We are looking for your ideas! If you want to contribute to this project, please fork and
contribute or write an additional module! We are sure that there are a lot of cool ideas for 
other modules out there. This is just the beginning!

Memacs is designed with respect to minimal effort for new modules.

We are using [[http://www.python.org/dev/peps/pep-0008/][Python PEP8]] and [[http://en.wikipedia.org/wiki/Test-driven_development][Test Driven Development (TDD)]].

** License

Memacs is licensed under the GPLv3 [[LICENSE.org][license]].
